{"version":3,"sources":["config/fbconfig.js","components/AuthContext/AuthProvider.js","components/layouts/SignedIn.js","components/layouts/SignedOut.js","components/layouts/Navbar.js","components/Notifications.js","components/PagePagination.js","components/ProjectSummary.js","components/ProjectList.js","hooks/useGetProjects.js","pages/DashBoardPage.js","hooks/useGetProject.js","pages/ProjectDetailsPage.js","pages/SignUpPage.js","pages/SignInPage.js","pages/CreateProjectPage.js","components/PrivateRoutes.js","pages/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","auth","AuthContext","React","createContext","useAuthContext","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","firstN","setFirstN","lastN","setLastN","initials","setInitials","profileUpdate","setProfileUpdate","signUp","email","password","first","last","a","currentUserNames","fiestInitials","lastInitials","iniToUpperCase","concat","toUpperCase","createUserProfileNames","createUserWithEmailAndPassword","currentUserIn","userIn","user","updateProfile","displayName","useEffect","onAuthStateChanged","userdisplayName","names","split","value","signIn","signInWithEmailAndPassword","signOut","Provider","SignedIn","history","useHistory","setError","nameInitials","setNameInitials","handleSingOut","push","Nav","Item","to","Link","Button","style","textDecoration","variant","onClick","className","SignedOut","Navibar","isSignedIn","setIsSignedIn","Navbar","bg","Brand","Notifications","data","notifications","slice","Card","Body","Title","map","notify","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","id","PagePagination","projectsPerPage","totalProjects","paginator","active","currentPage","numberOfPages","pages","Pagination","Math","ceil","ProjectSummary","project","date","title","Text","ProjectList","projects","useGetProjects","getAllProjects","projectsRef","collection","orderBy","get","allprojects","docs","doc","useQuery","DashBoardPage","isLoading","setProjects","setCurrentPage","indexOfLastProject","indexOfFirstProject","currentProjects","Container","fluid","Row","Col","md","length","useGetProject","useQueryClient","getQueryData","find","p","ProjectDetailsPage","props","match","params","content","Footer","SingUpPage","error","firstNameRef","useRef","lastNameRef","emailRef","passwordRef","passwordConfirmRef","maxWidth","Alert","Form","onSubmit","e","preventDefault","current","Error","message","Group","Label","Control","type","ref","required","placeholder","disabled","SingInPage","submitFormHandler","CreateProjectPage","setTitle","setContent","newProject","Date","mutation","useMutation","add","submitHandler","mutateAsync","console","controlId","onChange","target","as","PrivateRoutes","Component","privatecomp","rest","render","NotFoundPage","App","path","exact","component","SignInPage","SignUpPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.c527f5f3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAEre8D8IUYGD_2MVMrp7gc0IH3aVn391M\",\n  authDomain: \"project-app-e49d6.firebaseapp.com\",\n  projectId: \"project-app-e49d6\",\n  storageBucket: \"project-app-e49d6.appspot.com\",\n  messagingSenderId: \"298931497155\",\n  appId: \"1:298931497155:web:6315a76b14763fa95c5a76\",\n  measurementId: \"G-LC2CQRK38B\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../../config/fbconfig\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuthContext() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [firstN, setFirstN] = useState(\"\");\n  const [lastN, setLastN] = useState(\"\");\n  const [initials, setInitials] = useState(\"\");\n  const [profileUpdate, setProfileUpdate] = useState(false);\n\n  ////sign up new user\n  const signUp = async (email, password, first, last) => {\n    // setFirstN(first);\n    // setLastN(last);\n\n    //formate user name for firestore user displayName\n    const createUserProfileNames = (first, last) => {\n      const fiestInitials = first[0];\n      const lastInitials = last[0];\n      const userInitials = fiestInitials.concat(lastInitials);\n      const iniToUpperCase = userInitials.toUpperCase();\n      const userProfileName = `${iniToUpperCase},${first},${last}`;\n      return userProfileName;\n    };\n\n    //get user name to create firestore displayName\n    const currentUserNames = createUserProfileNames(first, last);\n\n    //create a new user\n    const currentUserIn = await auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    //update the created user's displayName\n    if (currentUserIn) {\n      const userIn = currentUserIn.user;\n      try {\n        await userIn.updateProfile({\n          displayName: currentUserNames,\n        });\n        //console.log(\"update done\");\n        setProfileUpdate(true);\n      } catch (error) {\n        //console.log(error);\n      }\n    }\n  };\n\n  ////sign in exiting user\n  const signIn = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  ////sign user out\n  const signOut = () => auth.signOut();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n      if (!user) {\n        return;\n      } else {\n        const userdisplayName = user.displayName;\n        if (userdisplayName === null) {\n          return;\n        }\n        const names = userdisplayName.split(\",\");\n        setFirstN(names[1]);\n        setLastN(names[2]);\n        setInitials(names[0]);\n      }\n    });\n\n    return unsubscribe;\n  }, [profileUpdate]);\n\n  const value = {\n    currentUser,\n    signUp,\n    signIn,\n    signOut,\n    firstN,\n    lastN,\n    initials,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Nav, Button } from \"react-bootstrap\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../AuthContext/AuthProvider\";\n\nconst SignedIn = () => {\n  const { signOut, initials } = useAuthContext();\n  const history = useHistory();\n  const [setError] = useState(\"\");\n  const [nameInitials, setNameInitials] = useState(\"\");\n\n  useEffect(() => {\n    if (!initials) {\n      return;\n    }\n    setNameInitials(initials);\n  }, [nameInitials, initials]);\n\n  const handleSingOut = async () => {\n    try {\n      await signOut();\n      history.push(\"/signin\");\n    } catch {\n      setError(\"failed to log out\");\n    }\n  };\n  return (\n    <>\n      <Nav.Item>\n        <LinkContainer to=\"/create\">\n          <Nav.Link>New Project</Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n      <Nav.Item>\n        <Button\n          style={{ textDecoration: \"none\" }}\n          variant=\"link\"\n          onClick={handleSingOut}\n        >\n          Log Out\n        </Button>\n      </Nav.Item>\n      <Nav.Item>\n        <LinkContainer to=\"/\">\n          <Nav.Link className=\"badge  rounded-circle bg-primary py-2 mt-2 mx-3 \">\n            {initials}\n          </Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n    </>\n  );\n};\n\nexport default SignedIn;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst SignedOut = () => {\n  return (\n    <>\n      <Nav.Item>\n        <LinkContainer to=\"/signup\">\n          <Nav.Link>Sign Up</Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n      <Nav.Item>\n        <LinkContainer to=\"/signin\">\n          <Nav.Link>Log In</Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n    </>\n  );\n};\n\nexport default SignedOut;\n","import React, { useEffect, useState } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAuthContext } from \"../AuthContext/AuthProvider\";\n\nimport SignedIn from \"./SignedIn\";\nimport SignedOut from \"./SignedOut\";\n\nconst Navibar = () => {\n  const { currentUser } = useAuthContext();\n\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      setIsSignedIn(true);\n    } else {\n      setIsSignedIn(false);\n    }\n  }, [currentUser]);\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>AlexooO</Navbar.Brand>\n      </LinkContainer>\n\n      <Nav className=\"ml-auto \">\n        {isSignedIn ? <SignedIn /> : <SignedOut />}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Navibar;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n  const data = notifications.slice(0, 3);\n\n  return (\n    <section className=\"mt-3\">\n      <Card>\n        <Card.Body>\n          <Card.Title className=\"text-center t-color\">Notifications</Card.Title>\n          <ul className=\"list-group\">\n            {data &&\n              data.map((notify) => (\n                <li key={notify.id} className=\"list-group-item\">\n                  <span className=\"t-color\">\n                    {notify.authorFirstName} {notify.authorLastName}\n                  </span>{\" \"}\n                  created a project\n                  <br />\n                  {moment(notify.createdAt.toDate()).calendar()}\n                </li>\n              ))}\n          </ul>\n        </Card.Body>\n      </Card>\n    </section>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nconst PagePagination = ({\n  projectsPerPage,\n  totalProjects,\n  paginator,\n  currentPage,\n}) => {\n  let active = currentPage;\n\n  let numberOfPages = [];\n  for (\n    let pages = 1;\n    pages <= Math.ceil(totalProjects / projectsPerPage);\n    pages++\n  ) {\n    numberOfPages.push(\n      <Pagination.Item\n        key={pages}\n        onClick={() => paginator(pages)}\n        active={pages === active}\n      >\n        {pages}\n      </Pagination.Item>\n    );\n  }\n  return <Pagination>{numberOfPages}</Pagination>;\n};\n\nexport default PagePagination;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst ProjectSummary = ({ project }) => {\n  const date = moment(project.createdAt.toDate()).calendar();\n\n  return (\n    <Card className=\"mb-2 mt-3\">\n      <Card.Body>\n        <Card.Title className=\"t-color\">{project.title}</Card.Title>\n        <Card.Text className=\"text-muted\">\n          Posted by: {project.authorFirstName} <br />\n          {date}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div>\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link\n              style={{ textDecoration: \"none\" }}\n              to={`/Project/${project.id}`}\n              key={project.id}\n            >\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { db } from \"../config/fbconfig\";\n\nexport const useGetProjects = () => {\n  //get all projects from firestore\n  const getAllProjects = async () => {\n    let projectsRef = db.collection(\"projects\").orderBy(\"createdAt\", \"desc\");\n    let allprojects = await projectsRef.get();\n\n    const data = allprojects.docs.map((doc) => {\n      return { ...doc.data(), id: doc.id };\n    });\n\n    return data;\n  };\n  return useQuery(\"allprojects\", getAllProjects);\n};\n\nexport default useGetProjects;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Notifications from \"../components/Notifications\";\nimport PagePagination from \"../components/PagePagination\";\nimport ProjectList from \"../components/ProjectList\";\nimport useGetProjects from \"../hooks/useGetProjects\";\n\nconst DashBoardPage = () => {\n  const { data, isLoading } = useGetProjects();\n  const [projects, setProjects] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [projectsPerPage] = useState(5);\n\n  useEffect(() => {\n    if (data) {\n      setProjects(data);\n    } else {\n      return;\n    }\n  }, [data]);\n\n  //get current project page number\n  const indexOfLastProject = currentPage * projectsPerPage;\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n  const currentProjects = projects.slice(\n    indexOfFirstProject,\n    indexOfLastProject\n  );\n\n  //change pages\n  const paginator = (numberOfPages) => setCurrentPage(numberOfPages);\n\n  return (\n    <Container fluid className=\"\">\n      {isLoading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <Row>\n          <Col md={7}>\n            <ProjectList projects={currentProjects} />\n            <PagePagination\n              projectsPerPage={projectsPerPage}\n              totalProjects={projects.length}\n              paginator={paginator}\n              currentPage={currentPage}\n            />\n          </Col>\n          <Col md={5}>\n            <Notifications notifications={projects} />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default DashBoardPage;\n","import React from \"react\";\nimport { useQueryClient } from \"react-query\";\n\nconst useGetProject = (projectId) => {\n  const queryClient = useQueryClient();\n  const data = queryClient.getQueryData();\n  const projectDetails = data.find((p) => p.id === projectId);\n  return projectDetails;\n};\n\nexport default useGetProject;\n","import React from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport useGetProject from \"../hooks/useGetProject\";\nimport moment from \"moment\";\n\nconst ProjectDetailsPage = (props) => {\n  const id = props.match.params.id;\n\n  const data = useGetProject(id);\n  const date = moment(data.createdAt.toDate()).calendar();\n\n  return (\n    <Container>\n      <Card>\n        <Card.Body>\n          <Card.Title className=\"t-color\">\n            Project Title:-{data.title}\n          </Card.Title>\n          <Card.Text> {data.content}</Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">\n          <p>\n            posted by: {data.authorFirstName} {\"\"}\n            {data.authorLastName}\n          </p>\n          <p>{date}</p>\n        </Card.Footer>\n      </Card>\n    </Container>\n  );\n};\n\nexport default ProjectDetailsPage;\n","import React, { useState, useRef } from \"react\";\nimport { Form, Button, Card, Alert, Container, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../components/AuthContext/AuthProvider\";\n\nconst SingUpPage = () => {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n\n  const { signUp, currentUser } = useAuthContext();\n\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"password do not match\");\n    }\n    try {\n      setError(\"\");\n      setLoading(true);\n      signUp(\n        emailRef.current.value,\n        passwordRef.current.value,\n        firstNameRef.current.value,\n        lastNameRef.current.value\n      );\n      history.push(\"/\");\n    } catch (Error) {\n      setError(Error.message);\n    }\n    setLoading(false);\n  };\n  if (currentUser) return <Redirect to=\"/\" />;\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center flex-column\">\n      <Card className=\"w-100 mt-4\" style={{ maxWidth: \"400px\" }}>\n        <Card.Body>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <h2 className=\"text-center mb-2\">Sign up</h2>\n          <Form onSubmit={submitFormHandler}>\n            <Form.Group id=\"email\">\n              <Form.Label> First Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={firstNameRef}\n                required\n                placeholder=\"enter first name\"\n              />\n            </Form.Group>\n            <Form.Group id=\"text\">\n              <Form.Label> Last name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={lastNameRef}\n                required\n                placeholder=\"enter last name\"\n              />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label> Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                placeholder=\"enter email\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label> Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                required\n                placeholder=\"enter password\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label> Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password-confirm\"\n                ref={passwordConfirmRef}\n                placeholder=\"confirm password\"\n                required\n              />\n            </Form.Group>\n            <Button className=\"w-100\" type=\"submit\" disabled={loading}>\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2 pb-4\">\n        Have an account already?{\" \"}\n        <LinkContainer to=\"/signin\">\n          <Nav.Link>Sign In</Nav.Link>\n        </LinkContainer>\n      </div>\n    </Container>\n  );\n};\n\nexport default SingUpPage;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Form, Button, Card, Alert, Container, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../components/AuthContext/AuthProvider\";\n\nconst SingInPage = () => {\n  const history = useHistory();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const { signIn, currentUser } = useAuthContext();\n\n  const submitFormHandler = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signIn(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    return () => {\n      setLoading(false);\n    };\n  }, [loading]);\n\n  if (currentUser) return <Redirect to=\"/\" />;\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center flex-column\">\n      <Card className=\"w-100 mt-4\" style={{ maxWidth: \"400px\" }}>\n        <Card.Body>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <h2 className=\"text-center mb-2\">Sign In</h2>\n          <Form onSubmit={submitFormHandler}>\n            <Form.Group id=\"email\">\n              <Form.Label> Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                placeholder=\"enter email\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label> Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                required\n                placeholder=\"enter password\"\n              />\n            </Form.Group>\n\n            <Button className=\"w-100\" type=\"submit\" disabled={loading}>\n              Sign In\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2 pb-4\">\n        Create an account{\" \"}\n        <LinkContainer to=\"/signup\">\n          <Nav.Link>Sign Up</Nav.Link>\n        </LinkContainer>\n      </div>\n    </Container>\n  );\n};\n\nexport default SingInPage;\n","import React, { useState } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useMutation } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuthContext } from \"../components/AuthContext/AuthProvider\";\nimport { db } from \"../config/fbconfig\";\n\nconst CreateProjectPage = () => {\n  const history = useHistory();\n  const { firstN, lastN } = useAuthContext();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const newProject = {\n    authorFirstName: firstN,\n    authorLastName: lastN,\n    content,\n    createdAt: new Date(),\n    title,\n  };\n\n  const mutation = useMutation((newProject) => {\n    return db.collection(\"projects\").add(newProject);\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      await mutation.mutateAsync(newProject);\n      setTitle(\"\");\n      setContent(\"\");\n      history.push(\"/\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container>\n      <h5 className=\"text-center mb-5\">Create New Project</h5>\n      <Row>\n        <Col md={12} className=\"center\">\n          {\" \"}\n          <Form className=\"mx-5\" onSubmit={submitHandler}>\n            <Form.Group controlId=\"title\">\n              <Form.Label className=\"text-start\">Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={title}\n                placeholder=\"project title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                type=\"text\"\n                value={content}\n                placeholder=\"project content\"\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              {mutation.isLoading ? <h4>send...</h4> : <h4>Create</h4>}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CreateProjectPage;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuthContext } from \"./AuthContext/AuthProvider\";\n\nexport const PrivateRoutes = ({ privatecomp: Component, ...rest }) => {\n  const { currentUser } = useAuthContext();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/signin\" />\n        );\n      }}\n    />\n  );\n};\n","import React from \"react\";\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h1>Page Not found</h1>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navibar from \"./components/layouts/Navbar\";\nimport DashBoardPage from \"./pages/DashBoardPage\";\nimport ProjectDetailsPage from \"./pages/ProjectDetailsPage\";\nimport SignUpPage from \"./pages/SignUpPage\";\nimport SignInPage from \"./pages/SignInPage\";\nimport CreateProjectPage from \"./pages/CreateProjectPage\";\nimport { PrivateRoutes } from \"./components/PrivateRoutes\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navibar />\n\n      <Switch>\n        <PrivateRoutes path=\"/\" exact privatecomp={DashBoardPage} />\n        <PrivateRoutes path=\"/project/:id\" privatecomp={ProjectDetailsPage} />\n\n        <Route path=\"/signin\" component={SignInPage} />\n        <Route path=\"/signup\" component={SignUpPage} />\n\n        <PrivateRoutes path=\"/create\" privatecomp={CreateProjectPage} />\n        <PrivateRoutes path=\"/\" privatecomp={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthProvider } from \"./components/AuthContext/AuthProvider\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}